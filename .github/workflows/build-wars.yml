name: Build Pacakge
on:
  pull_request:
    branches:
      - master
      - main
      - war-builds
    paths:
      - 'agama/**'
      - 'jans-auth-server/**'
      - 'jans-bom/**'
      - 'jans-client-api/**'
      - 'jans-config-api/**'
      - 'jans-core/**'
      - 'jans-eleven/**'
      - 'jans-fido2/**'
      - 'jans-notify/**'
      - 'jans-orm/**'
      - 'jans-scim/**'
      
  push:
   branches:
      - master
      - main
      - war-builds
   paths:
      - 'agama/**'
      - 'jans-auth-server/**'
      - 'jans-bom/**'
      - 'jans-client-api/**'
      - 'jans-config-api/**'
      - 'jans-core/**'
      - 'jans-eleven/**'
      - 'jans-fido2/**'
      - 'jans-notify/**'
      - 'jans-orm/**'
      - 'jans-scim/**'
      - '!**/**/**.yml'
      - '!pom.xml'
jobs:
  build:
    name: Build Package
    runs-on: ubuntu-latest
    strategy:
     matrix:
        fldrpath: ['agama','jans-auth-server','jans-bom','jans-client-api','jans-config-api','jans-core','jans-eleven','jans-fido2','jans-notify','jans-orm','jans-scim']
    steps: 
    - name : Variables
      run: |
         echo ${{ github.repository }}
         echo ${{ github.actor }}
         
    - uses: actions/checkout@v1
      with:
          repository: ${{ github.repository }}
          token: ${{ secrets.githubtoken }}
    - uses: actions/setup-java@v1
      with:
          java-version: '14'

    - name: Publish package
      run: |
           pwd
           #mvn -Dmaven.test.skip=true -Ddependency-check.skip=true clean compile install
           mvn -B package --file ${{ matrix.fldrpath }}/pom.xml
  deploy:
    needs: [build]
    runs-on: ubuntu-latest 
    steps:
       - uses: actions/checkout@v1
       - name: Set up JDK 11
         uses: actions/setup-java@v1
         with:
          java-version: 11
       - name: Deploy to Github Package Registry
         env:
           GITHUB_USERNAME: ${{ github.actor }}
           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
         run: |
           pwd
           mvn --settings settings.xml --file ${{ matrix.fldrpath }}/pom.xml deploy
